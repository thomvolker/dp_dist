---
title: "Differentially private distribution fitting"
format: html
---

# Decisions to be made

## Do we want to implement unbounded or bounded differentially privacy?

What is the difference between the two?

__Unbounded differential privacy__ implies that for any pairs of data sets $D_1$ and $D_2$, $D_1$ can be obtained from $D_2$ by adding or removing one observation. 

__Bounded differential privacy__ implies that for any pairs of data sets $D_1$ and $D_2$, $D_1$ can be obtained from $D_2$ by changing the value of one observations.

__Difference__

```{r}
set.seed(123)
x <- runif(10, 1, 10)
x <- c(1, x, 10)

# Unbounded DP
sum(c(x, 10)) - sum(x) # sensitivity = 10

# Bounded DP
sum(ifelse(x == 1, 10, x)) - sum(x) # sensitivity = 9
```

# Differentially private distributions

Before implementing any distribution, let's first define the Laplace distribution in `R`. 

```{r}
rlaplace <- function(n, epsilon, sensitivity) {
  b <- sensitivity / epsilon
  p <- runif(n, -0.5, 0.5)
  - b * sign(p) * log(1 - 2 * abs(p))
}

hist(rlaplace(100000, 1, 1), breaks = 100)
cat("Looks Laplace-ish\n")

hist(rlaplace(100000, 0.01, 1), breaks = 100)
cat("Also Laplace-ish, but with higher privacy level\n")
```

# Differentially private categorical distributions

## Unique key distribution

The ID distribution does not disclose any information apart from the number of observations (which is typically not considered a sensitive attribute). Hence, it satisfies DP by definition.

## Poisson distribution

```{r}
dp_Poisson <- function(n, epsilon, sensitivity, lambda) {
  sensitivity <- sensitivity / n # but depends on definition bounded/unbounded
  lambda <- lambda + rlaplace(1, epsilon, sensitivity)
  rpois(n, lambda)
}
```

## Discrete Truncated Normal Distribution

Here, we can raise the concern of whether the lower and upper bound are considered sensitive. That is, do we need to add noise to the bounds, or do we feel that this is covered by the sensitivity?

```{r}
dp_DiscreteTruncatedNormalDistribution <- function(n, epsilon, sensitivity, lower, upper, mean, sd) {
  
}
```



